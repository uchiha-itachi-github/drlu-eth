{"version":3,"file":"static/js/25.chunk.js","sources":["/Users/linyitang/github/newWallet2/src/contract/index.js","/Users/linyitang/github/newWallet2/src/page/dapp/game/winOrLose.jsx"],"sourcesContent":["import * as ethers from 'ethers/index.js';\nimport Config from './config.json'\nimport { reject } from 'q';\n\n\nfunction toHumanReadable(abi) {\n    if (!Array.isArray(abi)) { return }\n    abi = abi.filter(v => v.type !== 'fallback')\n    const hrabi = abi.map(v => {\n        const type = v.type\n        const name = v.name ? ' ' + v.name : ''\n        const inputs = v.inputs ? v.inputs.map(i => i.type + (i.indexed ? ' indexed' : '') + (i.name ? ' ' + i.name : '')).join() : ''\n        const stateMutability = v.stateMutability ? (v.stateMutability !== \"nonpayable\" ? ' ' + v.stateMutability : '') : ''\n        const returns = v.outputs ? (v.outputs.length >= 0 ? ` returns (${v.outputs.map((i) => i.type + (i.name ? ' ' + i.name : '') ).join()})` : '') : ''\n        return `${type}${name}(${inputs})${stateMutability}${returns}`;\n    })\n    return JSON.stringify(hrabi, null, 2);\n}\nfunction toAbi(hrabi) {\n    if (!Array.isArray(hrabi)) { return }\n    let abi = new ethers.utils.Interface(hrabi).abi.map(abi => {\n        abi = JSON.parse(JSON.stringify(abi));\n        delete abi.gas;\n        if (abi.stateMutability === null) {\n            delete abi.stateMutability\n        }\n        return abi\n    })\n    return JSON.stringify(abi, null, 2);\n}\n\nasync function deployErc20Token(name, symbol, decimals, wallet) {\n    let erc20 = new ethers.ContractFactory(Config.erc20.abi, Config.erc20.bytecode);\n    erc20 = erc20.connect(wallet);\n    let contract = await erc20.deploy(name, symbol, decimals);\n    return contract\n}\n\nasync function deployMutiWalletToken(_owners, _required, _daylimit, wallet) {\n    let mutiWallet = new ethers.ContractFactory(Config.mutiWallet.abi, Config.mutiWallet.bytecode);\n    mutiWallet = mutiWallet.connect(wallet);\n    let contract = await mutiWallet.deploy(name, symbol, decimals);\n    return contract\n}\n\n\nfunction Event(contract, eventName, args = [], fromBlock = 0, toBlock = 'latest') {\n    args = Array.isArray(args) ? args : [args];\n    let event = contract.filters[eventName](...args);\n    let abi = contract.interface.abi.find((v) => v.name === eventName).inputs;\n\n    let filter = {\n        fromBlock,\n        toBlock,\n        ...event\n    }\n\n\n    return this.getLogs(filter).then(function (result) {\n        let coder = new ethers.utils.AbiCoder()\n\n        let abi1 = abi.filter((v) => v.indexed)\n        let abi2 = abi.filter((v) => !v.indexed)\n\n        let r = result.map(r => {\n            r.topics.shift()\n            let topics = r.topics.map((t, i) => {\n                return coder.decode([abi1[i]], t)[0]\n            })\n            let datas = coder.decode(abi2, r.data)\n            let _r = abi.map(v => v.indexed ? topics.shift() : datas.shift())\n            _r.transactionHash = r.transactionHash\n            _r.blockNumber = Number(r.blockNumber)\n            return _r\n        })\n\n        return r\n    })\n\n    return Promise.resolve(1)\n}\n\n\nexport default {\n    toAbi,\n    toHumanReadable,\n    deployErc20Token,\n    deployMutiWalletToken,\n    Event\n}\n\nexport {\n    toAbi,\n    toHumanReadable,\n    deployErc20Token,\n    deployMutiWalletToken,\n    Event\n};\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport * as ethers from 'ethers/index.js';\nimport Config from '../../../contract/config.json';\nimport { Event } from '../../../contract/index';\nimport dayjs from 'dayjs';\n\n@inject('ethereumStore')\n@observer\nexport default class WinOrLost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rate: '',\n            devRate: '',\n            difficult: '',\n            gameStarted: '',\n            gameStartTime: '',\n            probability: '',\n            balance: '',\n            openHistory: false,\n            history: [],\n        }\n        this.provider = this.props.ethereumStore.provider;\n        this.contract = new ethers.Contract(Config.WinOrLose[3].contractAddress, Config.WinOrLose.abi, this.provider)\n    }\n    componentWillMount = () => {\n        this.getInfo()\n        this.interval = setInterval(() => {\n            this.getInfo();\n            this.state.openHistory && this.getHistory()\n        }, 4000)\n    }\n    componentWillUnmount = () => {\n        clearInterval(this.interval)\n    }\n\n    getInfo = async () => {\n        let getStatus = await this.contract.getStatus();\n\n        let [rate, devRate, difficult, gameStarted, gameStartTime, probability, balance] = getStatus;\n        [rate, devRate, difficult, gameStarted, gameStartTime, probability, balance] = JSON.parse(JSON.stringify([rate, devRate, difficult, gameStarted, gameStartTime, probability, balance]));\n        balance = ethers.utils.formatEther(balance)\n        this.setState({\n            rate, devRate, difficult, gameStarted, gameStartTime, probability, balance\n        })\n    }\n\n    play = async () => {\n        let signer = this.contract.connect(this.props.ethereumStore.wallet.connect(this.provider));\n        let tx = await signer.play({ value: ethers.utils.parseEther(this.state.eth) });\n        alert('txid: ' + tx.hash);\n        await tx.wait();\n        this.getInfo();\n    }\n\n    getHistoryReact = () => {\n        console.log(this.state.history)\n        let rows = this.state.history.map((v, i) => {\n            let { timestamp, number, winner, forWiner, forOwner, eth, player, transactionHash } = v\n            return (\n                <tr key={transactionHash}>\n                    <td>{i + 1}</td>\n                    <td>{player}</td>\n                    <td>{eth}</td>\n                    <td>{forWiner ? '中獎了！' : '沒中'}</td>\n                    <td>{forWiner || '銘謝惠顧'}</td>\n                    <td>{timestamp}</td>\n                </tr>\n            )\n        })\n        return (\n            <table className=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>玩家</th>\n                        <th>投注(ETH)</th>\n                        <th>中/沒中</th>\n                        <th>中多少(ETH)</th>\n                        <th>時間</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        )\n    }\n\n\n    getHistory = async () => {\n        let Lottery = Event.bind(this.provider)(this.contract, 'Lottery')\n        let Winning = Event.bind(this.provider)(this.contract, 'Winning')\n        Lottery = await Lottery;\n        Winning = await Winning;\n        Lottery = Lottery.map(v => {\n            let [timestamp, number, player, eth] = v\n            return { player, eth: ethers.utils.formatEther(eth), number, timestamp: dayjs(timestamp * 1000).format('YYYY年MM月DD日 HH:mm:ss'), transactionHash: v.transactionHash };\n        })\n        Winning = Winning.map(v => {\n            let [timestamp, number, winner, forWiner, forOwner] = v\n            console.log(timestamp)\n            return { number, winner, forOwner: ethers.utils.formatEther(forOwner), forWiner: ethers.utils.formatEther(forWiner), timestamp: dayjs(timestamp * 1000).format('YYYY年MM月DD日 HH:mm:ss'), transactionHash: v.transactionHash };\n        })\n        let rows = Lottery.map(v => {\n            let winner = Winning.find(x => {\n                return x.transactionHash == v.transactionHash\n            })\n            return Object.assign({}, v, winner);\n        })\n\n        rows = rows.reverse()\n        this.setState({ history: JSON.parse(JSON.stringify(rows)) });\n    }\n\n\n    render() {\n        return (\n            <div className=\"col-xs-12\">\n                <div className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">速食樂透</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        遊戲規則:\n                        <ul>\n                            <li>每下注一次，即刻知道中獎或沒中。假如中獎，獎金池中的{this.state.rate}%歸您，{100 - this.state.rate - this.state.devRate}%做為下次遊戲\b的獎金池，剩下{this.state.devRate}%給開發者；假如沒中，您投入的ETH會放入獎金池中，增加獎金池數量。目前獎金池累計:{Math.round(this.state.balance * 1000) / 1000}ETH</li>\n                            <li>你所下注的金額，至少0.01ETH為一單位。且中獎機率為一單位的倍數增加，如果下注1ETH中獎機率為0.01ETH的100倍。目前中獎機率為 {this.state.probability && Math.round(1 / this.state.probability * 100000) / 1000}%/單位</li>\n                            <li>為了使遊戲生生不息：中獎機率隨時間指數成長，遊戲開始後每經過一天，7天後中獎機率提高1倍，30天後中獎機率為原本的18倍。遊戲開始後已經經過:{this.state.gameStartTime && Math.round((Date.now() / 1000 - this.state.gameStartTime) / 60 / 60 * 100) / 100}小時</li>\n                        </ul>\n                        <div className=\"from-group\">\n                            <label className=\"control-label\">下注</label>\n                            <input\n                                className=\"form-control\"\n                                placeholder=\"ETH\"\n                                type=\"number\"\n                                onChange={(e) => { this.state.eth = e.target.value }} />\n                        </div>\n                    </div>\n                    <div className=\"box-footer\">\n                        {this.props.ethereumStore.address ? <button type=\"button\" className=\"btn btn-primary\" onClick={this.play}>送出</button> : <button className=\"btn btn-primary\" disabled>請從右上角先進行登入</button>}\n                    </div>\n                </div>\n                {/* {this.props.ethereumStore.address === this.state.getDeveloperAddress &&\n                    [<div key=\"1\" className=\"box box-primary\">\n                        <div className=\"box-header with-border\">\n                            <h3 className=\"box-title\">開牌與派彩</h3>\n                        </div>\n                        <div className=\"box-body\">\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.finishBtn}>送出</button>\n                        </div>\n                        <div className=\"box-footer\">\n\n                        </div>\n                    </div>,\n\n                    <div key=\"2\" className=\"box box-primary\">\n                        <div className=\"box-header with-border\">\n                            <h3 className=\"box-title\">設置</h3>\n                        </div>\n                        <div className=\"box-body\">\n                            <div className=\"form-group\">\n                                <div>\n                                    <label className=\"control-label\">設定競爭條件 競爭人數</label>\n                                    <input className=\"form-control\" type=\"number\" onChange={(e) => this.contenders = e.target.value} />\n                                    <label className=\"control-label\">投注價格(eth)</label>\n                                    <input className=\"form-control\" type=\"number\" onChange={(e) => this.bettingprice = e.target.value} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"box-footer\">\n                            <button className=\"btn btn-primary\" onClick={this.setBettingConditionBtn}>設定</button>\n                        </div>\n                    </div>]\n\n                } */}\n                {/*<divr\" style={{ display: \"none\" }}>\n                    <div>下注賭金<inputr\" />(請依右上角之投注金額下注)</div>\n                    <div>輸入猜測值\n                        <inpute\" />\n                        <button\">下注</button>交易編號:<span\">\n                        </span>\n                    </div>\n                </div>\n                <divr\" style={{ display: \"none\" }}>\n                    <div>輸入一個目標值找最接近的贏家\n                        <inpute\" />\n                        <button\">尋找</button>\n                        回傳:\n                        <span</span>\n                    </div>\n                    <br />\n                    <div>設定競爭條件 競爭人數:\n                        <inputs\" /> 投注價格(eth):\n                        <inpute\" />\n                        <button\">設定</button>\n                        交易編號:\n                        <span</span>\n                    </div>\n                    <br />\n                    <div>開牌與派彩\n                        <button\">點擊</button>\n                        回傳:\n                        <span</span>\n                    </div>\n                    <br />\n                </div> */}\n                <div key=\"1\" className=\"box box-primary\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">歷史紀錄</h3>\n                    </div>\n                    <div className=\"box-body\">\n                        <button className=\"btn btn-primary\" onClick={() => {\n                            this.state.openHistory || this.setState({ openHistory: true })\n                        }}>查詢歷史賭局結果</button>\n                        {this.getHistoryReact()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n}\nexport { WinOrLost };"],"mappings":"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","sourceRoot":""}