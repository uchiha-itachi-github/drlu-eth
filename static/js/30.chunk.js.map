{"version":3,"file":"static/js/30.chunk.js","sources":["/Users/linyitang/github/newWallet2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/Users/linyitang/github/newWallet2/src/page/other/tool/privateKeyTransfer.jsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from 'react';\nimport * as bitcoinlib from 'bitcoinjs-lib';\n\nconst LITECOIN = {\n    messagePrefix: '\\x19Litecoin Signed Message:\\n',\n    bip32: {\n        public: 0x019da462,\n        private: 0x019d9cfe\n    },\n    pubKeyHash: 0x30,\n    scriptHash: 0x32,\n    wif: 0xb0\n}\n\nexport default class PrivateKeyTransfer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            network: bitcoinlib.networks.testnet,\n            priv: ''\n        }\n        this.networks = [\n            bitcoinlib.networks.testnet,\n            Object.assign({}, bitcoinlib.networks.testnet),\n            bitcoinlib.networks.bitcoin,\n            Object.assign({}, bitcoinlib.networks.bitcoin),\n            LITECOIN,\n            Object.assign({}, LITECOIN),\n        ]\n    }\n\n    changePrivFormat = (e) => {\n        this.state.network = this.networks[e.target.value]\n        this.forceUpdate()\n    }\n\n    render() {\n        let keyPair = null;\n        let address = ''\n        try {\n            keyPair = this.state.priv ? bitcoinlib.ECPair.fromPrivateKey(Buffer.from(this.state.priv, 'hex'), { network: this.state.network }) : null;\n            address = keyPair ? bitcoinlib.payments.p2pkh({ pubkey: keyPair.publicKey, network: this.state.network }).address : '';\n            if (\n                this.state.network === this.networks[1] || \n                this.state.network === this.networks[3] || \n                this.state.network === this.networks[5]\n            ) {\n                address = bitcoinlib.payments.p2sh({\n                    network: this.state.network,\n                    redeem: bitcoinlib.payments.p2wpkh({\n                        pubkey: keyPair.publicKey,\n                        network: this.state.network\n                    })\n                }).address\n            }\n            this.state.wif = keyPair && keyPair.toWIF()\n        } catch (e) {\n\n        }\n\n        return (\n            <div className=\"box box-primary\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">私鑰轉換</h3>\n                </div>\n                <div className=\"box-body\" >\n                    <select onChange={this.changePrivFormat}>\n                        <option value=\"0\">btc testnet</option>\n                        <option value=\"1\">btc testnet(segwit)</option>\n                        <option value=\"2\">btc(legacy)</option>\n                        <option value=\"3\">btc(segwit)</option>\n                        <option value=\"4\">litecoin</option>\n                        <option value=\"5\">litecoin(segwit)</option>\n                    </select>\n                    <input\n                        className=\"form-control\"\n                        placeholder=\"hex\"\n                        value={this.state.priv}\n                        onChange={(e) => {\n                            this.state.priv = e.target.value;\n                            try {\n                                bitcoinlib.ECPair.fromPrivateKey(Buffer.from(this.state.priv, 'hex'), { network: this.state.network })\n                            } catch (e) {\n                                this.state.wif = ''\n                            }\n                            this.forceUpdate()\n\n                        }}\n                    />\n                    <input className=\"form-control\" placeholder=\"wif\"\n                        className=\"form-control\"\n                        placeholder=\"wif\"\n                        value={this.state.wif}\n                        onChange={(e) => {\n                            try {\n                                let keyPair = bitcoinlib.ECPair.fromWIF(e.target.value, this.state.network);\n                                this.state.priv = Buffer.from(keyPair.__d).toString('hex');\n                            } catch (err) {\n                                this.state.wif = e.target.value\n                                this.state.priv = ''\n                            }\n                            this.forceUpdate()\n                        }}\n                    />\n                    <input className=\"form-control\" value={address} placeholder='Address' disabled />\n                </div>\n            </div>\n        )\n    }\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AACA;AAUA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiBA;AACA;AAAA;AACA;AACA;AAlBA;AACA;AACA;AAFA;AAIA;AANA;AAcA;AACA;;;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAbA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;AA9FA;AACA;AADA;;;;;;;;;;;;AAXA;AAWA;;;;;;;;;A","sourceRoot":""}